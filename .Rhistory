usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
pxt(tabla07, 0, 1:10)
pxt(tabla07, 0, 1:100)
print(tabla07)
p <- pxt(tabla07, 0, 1:100)
log(p)
-0.5*[log(p) + log(p)[-1]]
-0.5*(log(p) + log(p)[-1])
-0.5*(log(p)[length(p)] + log(p)[-1])
mu_x <- -0.5*(log(p)[length(p)] + log(p)[-1])
plot(mu_x)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.0003, 1.07), from = 0, to = 120)
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:120)
p00 <- pxt(tabla00, 0, 1:120)
p07 <- pxt(tabla07, 0, 1:120)
p00 <- pxt(tabla00, 0, 1:120)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
plot(mu07)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
plot(mu07)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.0003, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:120)
p00 <- pxt(tabla00, 0, 1:120)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
plot(mu07)
plot(mu00)
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
plot(mu07)
plot(mu00)
# Rango de edades a analizar
edades <- 1:120
plot(mu07)
plot(mu00)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.0003, 1.07), from = 0, to = 120)
plot(mu07)
plot(mu00)
plot(mu07, col="red", pch="*")
plot(mu00, col="blue", pch="o")
plot(mu07, col="red", pch="*")
plot(mu00, col="blue", pch="o")
points(mu07)
points(mu00)
points(mu07)
curve(mu_x(x, 0.0003, 1.07), from = 0, to = 120)
points(mu07)
points(mu00)
edades <- 1:120
mu <- mu_x(x, 0.0003, 1.07)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
mu <- mu_x(x, 0.0003, 1.07)
mu <- mu_x(edades, 0.0003, 1.07)
plot(mu)
points(mu07)
points(mu00)
points(mu07, col=2)
points(mu00, col=3)
plot(mu07, col=2)
points(mu00, col=3)
plot(mu07, col=2)
points(mu00, col=3)
edades <- 1:120
mu <- mu_x(edades, 0.0003, 1.07)
points(mu, col=4)
edades <- 1:100
mu <- mu_x(edades, 0.0003, 1.07)
points(mu, col=4)
plot(mu07, col=2)
points(mu00, col=3)
edades <- 1:100
mu <- mu_x(edades, 0.0003, 1.07)
points(mu, col=4)
plot(mu07, col=2)
points(mu, col=4)
mu07/length(mu07)
mu07/sum(mu07)
mu07 <- mu07/sum(mu07)
mu00 <- mu00/sum(mu00)
plot(mu07, col=2)
points(mu00, col=3)
edades <- 1:100
mu <- mu_x(edades, 0.0003, 1.07)
points(mu, col=4)
mu_x(edades, 0.003, 1.07)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
mu_x(edades, 0.03, 1.07)
mu00
mu_x(edades, 0.03, 2.07)
mu_x(edades, 0.03, 1.01)
mu_x(edades, 0.03, 1.03)
mu_x(edades, 0.03, 1.05)
mu00
mu_x(edades, 0.05, 1.05)
mu_x(edades, 0.5, 1.05)
mu_x(edades, 0.8, 1.05)
mu_x(edades, 0.95, 1.05)
mu_x(edades, 1.5, 1.05)
mu_x(edades, 2.5, 1.05)
mu00
mu_x(edades, 1.5, 1.01)
mu_x(edades, 1.5, 1.015)
mu_x(edades, 1.5, 1.013)
plot(mu07, col=2)
points(mu00, col=3)
edades <- 1:100
mu <- mu_x(edades, 1.5, 1.013)
points(mu, col=4)
edades <- 1:100
plot(mu, col=4)
plot(mu07, col=2)
plot(mu, col=4)
mu <- mu_x(edades, 1.5, 1.02)
plot(mu, col=4)
mu <- mu_x(edades, 1.5, 1.07)
plot(mu, col=4)
mu <- mu_x(edades, 0.5, 1.07)
plot(mu, col=4)
mu <- mu_x(edades, 0.2, 1.07)
plot(mu, col=4)
mu <- mu_x(edades, 0.004, 1.07)
plot(mu, col=4)
points(mu00, col=3)
mu <- mu_x(edades, 0.005, 1.07)
plot(mu, col=4)
points(mu00, col=3)
mu <- mu_x(edades, 0.006, 1.07)
plot(mu, col=4)
points(mu07, col=2)
points(mu00, col=3)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(edades, 0.006, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(edades, 0.006, 1.07), from = 0, to = 120)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
edades <- 1:100
mu <- mu_x(edades, 0.006, 1.07)
plot(mu, col=4)
points(mu07, col=2)
points(mu00, col=3)
mu07 <- mu07 - mu07[1]
plot(mu07, col=4)
mu00 <- mu00 - mu00[1]
plot(mu07, col=4)
points(mu00, col=3)
# Para realizarles un ajuste
summary(lm(log(mu07), edades))
# Para realizarles un ajuste
summary(lm(log(mu07) ~ edades))
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
# Nos creamos un muestreo de la función
edades <- 1:99
mu <- mu_x(edades, 0.006, 1.07)
# Graficamos
plot(mu, col=4)
points(mu07, col=2)
points(mu00, col=3)
# Se pueden trasladar ambas funciones...
mu07 <- mu07 - mu07[1]
mu00 <- mu00 - mu00[1]
plot(mu07, col=4)
points(mu00, col=3)
# Para realizarles un ajuste
summary(lm(log(mu07) ~ edades))
lm(log(mu07) ~ edades)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
# Nos creamos un muestreo de la función
edades <- 1:99
mu <- mu_x(edades, 0.006, 1.07)
# Graficamos
plot(mu, col=4)
points(mu07, col=2)
points(mu00, col=3)
# Se pueden trasladar ambas funciones...
mu07 <- mu07 - mu07[1] + 1
mu00 <- mu00 - mu00[1] + 1
plot(mu07, col=4)
points(mu00, col=3)
# Para realizarles un ajuste
summary(lm(log(mu07) ~ edades))
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
# Para realizarles un ajuste
summary(lm(I(log(mu07) - log(mu07[1])) ~ edades ))
# Para realizarles un ajuste
summary(lm(log(mu07) ~ edades ))
# Para realizarles un ajuste
summary(lm(I(log(mu07) - log(mu07[1])) ~ edades + 0 ))
mu <- mu_x(edades, mu07[1], 0.0049040)
plot(mu, col=4)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
mu00
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
# Nos creamos un muestreo de la función
edades <- 1:99
mu <- mu_x(edades, 0.006, 1.07)
# Graficamos
plot(mu, col=4)
points(mu07, col=2)
points(mu00, col=3)
# Para realizarles un ajuste
summary(lm(I(log(mu07) - log(mu07[1])) ~ edades + 0 ))
summary(lm(log*mu07)~edades)
summary(lm(log(mu07) ~ edades))
# Para realizarles un ajuste
summary(lm(I(log(mu07) - log(mu07[1])) ~ edades + 0 ))
mu <- mu_x(edades, mu07[1], 0.0024394)
plot(mu, col=4)
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
# Nos creamos un muestreo de la función
edades <- 1:99
mu <- mu_x(edades, 0.006, 1.07)
# Graficamos
plot(mu, col=4)
points(mu07, col=2)
points(mu00, col=3)
# Densidad
f <- p07*mu07
# Modelo o ley de Pareto
mu_x <- function(x, B, C) B*C^x
# Visualizamos
curve(mu_x(x, 0.006, 1.07), from = 0, to = 120)
# Analicemos data real...
library("lifecontingencies")
data("demoUsa")
usaMale07 <- demoUsa[,c("age", "USSS2007M")]
usaMale00 <- demoUsa[,c("age", "USSS2000M")]
# Cambiamos los nombres por razones estéticas solamente
names(usaMale07) <- c("x","lx")
names(usaMale00) <- c("x","lx")
# Creamos las tablas de vida
tabla07 <- as(usaMale07,"lifetable")
tabla00 <- as(usaMale00,"lifetable")
p07 <- pxt(tabla07, 0, 1:100)
p00 <- pxt(tabla00, 0, 1:100)
# Expresiones para mu acorde a diferencias finitas (o simplemenete Taylor)
mu07 <- -0.5*(log(p07)[length(p07)] + log(p07)[-1])
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
# Nos creamos un muestreo de la función
edades <- 1:100
mu00 <- -0.5*(log(p00)[length(p00)] + log(p00)[-1])
# Nos creamos un muestreo de la función
edades <- 1:100
mu <- mu_x(edades, 0.006, 1.07)
# Graficamos
plot(mu, col=4)
points(mu07, col=2)
points(mu00, col=3)
# Densidad
f <- p07[-1]*mu07
plot(f)
f <- f/sum(f)
plot(f)
approx(f)
approx(f, edades)
approx(f, edades[-1])
approx(edades[-1], f)
model <- lm(f ~ poly(edades,3))
model <- lm(f ~ poly(edades[-1],3))
model <- lm(f ~ poly(edades[-length(edades)],3))
summary(modelo)
summary(model)
coef(model)
coef(model)[1]
coef(model)[[1]]
coef(model)*[1,2,3,4]
coef(model)*c(1,2,3,4)
unlist(coef(model))
unlist(coef(model))[]
unlist(coef(model))[[]]
unlist(coef(model))[:]
unlist(coef(model))[,]
ajuste <- function(x) coef(model)*c(1, x, x^2, x^3)
curve(ajuste, from = 0, to = 100)
curve(ajuste(x), from = 0, to = 100)
ajuste(3)
model$coefficients
View(ajuste)
View(model)
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x + coef(model)[[3]*x^2 + coef(model)[[4]]]*x^3
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x + coef(model)[[3]*x^2 + coef(model)[[4]]*x^3
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x + coef(model)[[3]]*x^2 + coef(model)[[4]]]*x^3
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x + coef(model)[[3]]*x^2 + coef(model)[[4]]*x^3
curve(ajuste(x), from = 0, to = 100)
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x +
coef(model)[[3]]*x^2 + coef(model)[[4]]*x^3
# Ajuste
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x +
coef(model)[[3]]*x^2 + coef(model)[[4]]*x^3
curve(ajuste(x), from = 0, to = 100)
# Modelo de grado 3
model <- lm(f ~ poly(edades[-length(edades)],3))
# Densidad
f <- p07[-1]*mu07
f <- f/sum(f)
plot(f)
# Modelo de grado 3
model <- lm(f ~ poly(edades[-length(edades)],3))
summary(model)
# Modelo de grado 3
model <- lm(f ~ poly(edades[-length(edades)],3))
# Ajuste
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x +
coef(model)[[3]]*x^2 + coef(model)[[4]]*x^3
curve(ajuste(x), from = 0, to = 100)
points(f)
s
# Modelo de grado 3
model <- lm(f ~ poly(edades[-length(edades)],3))
summary(model)
coef(model)[[3]]
model <- lm(f ~ tan(edades))
model <- lm(f ~ tan(edades[-length(edades)]))
summary(model)
View(model)
# Modelo de grado 3
model <- lm(f ~ poly(edades[-length(edades)],3))
View(model)
plot(f)
abline(coef(model))
# Ajuste
ajuste <- function(x) coef(model)[[1]] + coef(model)[[2]]*x +
coef(model)[[3]]*x**2 + coef(model)[[4]]*x**3
curve(ajuste(x), from = 0, to = 100)
View(model)
lines(coef(model))
plot(f)
lines(coef(model))
predict(model)
plot(f)
lines(predict(model))
lines(predict(model), col = "r")
lines(predict(model), col = 2)
lines(predict(model), col = 2, lwd = 1)
# Ajuste
plot(f)
lines(predict(model), col = 2, lwd = 1)
# Ajuste
plot(f)
lines(predict(model), col = 2, lwd = 10)
# Ajuste
plot(f)
lines(predict(model), col = 2, lwd = 3)
# Ajuste
plot(f, col = 3)
# Ajuste
plot(f, col = 1)
# Ajuste
plot(f, col = 4)
lines(predict(model), col = 2, lwd = 3)
# Ajuste
plot(f, col = 2)
lines(predict(model), col = 4, lwd = 2)
